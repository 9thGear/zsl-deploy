// Copyright 2017 Zerocoin Electric Coin Company LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// =================================
// START: Web3 deploy code
// =================================

var ztoken_abi = web3.eth.contract([{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"v","type":"uint256"},{"name":"n","type":"uint256"}],"name":"rightShift","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[{"name":"left","type":"bytes32"},{"name":"right","type":"bytes32"}],"name":"combine","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"shieldedTxCapacity","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"target","type":"address"},{"name":"amount","type":"uint256"}],"name":"mint","outputs":[],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"shieldedTransferCount","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[{"name":"cm","type":"bytes32"}],"name":"getWitness","outputs":[{"name":"","type":"uint256"},{"name":"","type":"bytes32[]"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"available","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"unshieldingCount","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"send_nf","type":"bytes32"},{"name":"cm","type":"bytes32"},{"name":"value","type":"uint64"}],"name":"shield","outputs":[],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"v","type":"uint256"},{"name":"n","type":"uint256"}],"name":"leftShift","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"capacity","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"anchor","type":"bytes32"},{"name":"spend_nf_1","type":"bytes32"},{"name":"spend_nf_2","type":"bytes32"},{"name":"send_nf_1","type":"bytes32"},{"name":"send_nf_2","type":"bytes32"},{"name":"cm_1","type":"bytes32"},{"name":"cm_2","type":"bytes32"}],"name":"shieldedTransfer","outputs":[],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"shieldedTxAvailable","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"depth","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"getEmptyRoots","outputs":[{"name":"","type":"bytes32[]"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"balanceOf","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"shieldingCount","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"proof","type":"bytes"},{"name":"spend_nf","type":"bytes32"},{"name":"cm","type":"bytes32"},{"name":"rt","type":"bytes32"},{"name":"value","type":"uint64"}],"name":"unshield","outputs":[],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[{"name":"cm","type":"bytes32"}],"name":"commitmentExists","outputs":[{"name":"","type":"bool"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"size","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"cm","type":"bytes32"}],"name":"addCommitment","outputs":[],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[{"name":"depth","type":"uint256"}],"name":"getEmptyRoot","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"recipient","type":"address"},{"name":"value","type":"uint256"}],"name":"transfer","outputs":[],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"balance","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[{"name":"cm","type":"bytes32"}],"name":"getLeafIndex","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"ZTOKEN_TREE_DEPTH","outputs":[{"name":"","type":"uint256"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[{"name":"index","type":"uint256"}],"name":"getCommitmentAtLeafIndex","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":true,"inputs":[],"name":"root","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true,"stateMutability":"payable"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"type":"function","payable":true,"stateMutability":"payable"},{"inputs":[{"name":"initialSupply","type":"uint256"},{"name":"tokenName","type":"string"}],"type":"constructor","payable":true,"stateMutability":"payable"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"LogTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"LogMint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"uuid","type":"bytes32"}],"name":"LogShielding","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"value","type":"uint256"},{"indexed":false,"name":"uuid","type":"bytes32"}],"name":"LogUnshielding","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":false,"name":"uuid_1","type":"bytes32"},{"indexed":false,"name":"uuid_2","type":"bytes32"}],"name":"LogShieldedTransfer","type":"event"},{"type":"fallback","payable":true,"stateMutability":"payable"}]);

var zprivatecontract_abi = web3.eth.contract([{"constant":true,"inputs":[],"name":"paymentReceivedByAsker","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidderConstellationAddress","outputs":[{"name":"","type":"string"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"randomness","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"paymentReceivedByBidder","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidderApk","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"rho","type":"bytes32"}],"name":"submitPaymentDetails","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"askAmount","outputs":[{"name":"","type":"uint64"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"apk","type":"bytes32"},{"name":"r","type":"bytes32"}],"name":"acceptBid","outputs":[{"name":"result","type":"bool"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidAmount","outputs":[{"name":"","type":"uint64"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"state","outputs":[{"name":"","type":"uint8"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"asker","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"askerConstellationAddress","outputs":[{"name":"","type":"string"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidTokenAddress","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"rho","type":"bytes32"}],"name":"submitSettlementDetails","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"askerApk","outputs":[{"name":"","type":"bytes32"}],"type":"function","payable":true},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"bidder","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"constant":true,"inputs":[],"name":"askTokenAddress","outputs":[{"name":"","type":"address"}],"type":"function","payable":true},{"inputs":[{"name":"apk","type":"bytes32"},{"name":"r","type":"bytes32"},{"name":"bid_constellation","type":"string"},{"name":"bid_address","type":"address"},{"name":"bid_amount","type":"uint64"},{"name":"ask_constellation","type":"string"},{"name":"ask_address","type":"address"},{"name":"ask_amount","type":"uint64"}],"type":"constructor","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":false,"name":"_amount","type":"uint256"}],"name":"LogBidEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogDoneEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogPaymentEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogSettlementEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogPaymentFailedEvent","type":"event","payable":true},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"LogSettlementFailedEvent","type":"event","payable":true},{"type":"fallback","payable":true}]);

// =================================
// END: Web3 deploy code
// =================================

function _zdemo_create_ztoken(tokenName, initialSupply) {
    // =================================
    // START: Web3 deploy code
    // =================================
    var ztoken = ztoken_abi.new(
        initialSupply,
        tokenName,
        {
            from: web3.eth.accounts[0],
            data: '0x606060405260006005600050556040516120f13803806120f1833981016040528051608051909101601d60008054600160a060020a0319163317905560405161051080610438833901809050604051809103906000f060018054600160a060020a03191691909117815560028290556320000000600355600480549182018082556100af92849260009283929082818380158290116101e1576000838152602090206101e191810190830161013e565b50600160a060020a0333166000908152600a602090815260408220849055600984905582516008805493819052927ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee360026001831615610100026000190190921691909104601f90810184900482019386019083901061015257805160ff19168380011785555b506101829291505b808211156101dd576000815560010161013e565b82800160010185558215610136579182015b82811115610136578251826000505591602001919060010190610164565b505060405161051080610948833901809050604051809103906000f0600e8054600160a060020a03199081169290921790819055600f8054600160a060020a039290921691909216179055505061129980610e586000396000f35b5090565b505050600092835250602082200183905590505b600183038110156102a5576102aa82836040805160208101825260008082528251909283918059106102245750595b90808252806020026020018201604052801561023b575b509150600090505b60208110156102f95784816020811015610002571a7f0100000000000000000000000000000000000000000000000000000000000000028282815181101561000257906020010190600160f860020a031916908160001a905350600101610243565b505050565b6004805460018101808355929450909182818380158290116102df578183600052602060002091820191016102df919061013e565b5050506000928352506020909120018290556001016101f5565b5060005b60208110156103625783816020811015610002571a7f0100000000000000000000000000000000000000000000000000000000000000028282602001815181101561000257906020010190600160f860020a031916908160001a9053506001016102fd565b600160009054906101000a9004600160a060020a0316600160a060020a0316633319f70b83604051827c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f16801561040c5780820380516001836020036101000a031916815260200191505b50925050506020604051808303816000876161da5a03f11561000257505060405151969550505050505056606060405260008054600160a060020a031990811661880117909155600180548216618802179055600280548216618803179055600380549091166188041790556104c28061004e6000396000f3606060405236156100405760e060020a60003504633319f70b811461004b578063794f69e31461006f578063e088659e14610194578063eb68ef7a14610287575b610390610392610002565b610394600480356024810191013560006103ba604083145b8015156104bf57610002565b6103a660246004803582810192910135903560443560643560843560a43560c43560e4356040516001547f5286a75b0000000000000000000000000000000000000000000000000000000082526024820189905260448201889052606482018790526084820186905260a4820185905260c4820184905260e482018390526101006004830190815261010483018b905260009283928392600160a060020a039190911691635286a75b918f918f918f918f918f918f918f918f918f918190610124018b8b8082843782019150509a50505050505050505050506020604051808303816000876161da5a03f115610002575050604051519250505080821a60f860020a02600160f860020a03198116831415610444575b50509998505050505050505050565b6103a66024600480358281019291013590356044356064356040516002547f4e320263000000000000000000000000000000000000000000000000000000008252602482018590526044820184905267ffffffffffffffff831660648301526080600483019081526084830187905260009283928392600160a060020a039190911691634e320263918b918b918b918b918b91819060a401878780828437820191505096505050505050506020604051808303816000876161da5a03f115610002575050604051519250505080821a60f860020a02600160f860020a0319811683141561046d575b505095945050505050565b6103a66024600480358281019291013590356044356064356084356003546040517f30be923f0000000000000000000000000000000000000000000000000000000081526024810186905260448101859052600160a060020a03848116606483015267ffffffffffffffff8416608483015260a06004830190815260a4830189905260009384938493909116916330be923f918c918c918c918c918c918c91819060c40188888082843782019150509750505050505050506020604051808303816000876161da5a03f11561000257505060405151925082905060001a60f860020a029050600160f860020a031981166000141561049657600092505b50509695505050505050565b005b565b60408051918252519081900360200190f35b604080519115158252519081900360200190f35b6000546040517f3a27652300000000000000000000000000000000000000000000000000000000815260206004820190815260248201859052600160a060020a039290921691633a27652391869186918190604401848480828437820191505093505050506020604051808303816000876161da5a03f11561000257505060405151949350505050565b600160f860020a0319811660f860020a14156104635760019250610185565b6101856000610063565b600160f860020a0319811660f860020a141561048c576001925061027c565b61027c6000610063565b600160f860020a0319811660f860020a14156104b55760019250610384565b6103846000610063565b5056606060405260008054600160a060020a031990811661880117909155600180548216618802179055600280548216618803179055600380549091166188041790556104c28061004e6000396000f3606060405236156100405760e060020a60003504633319f70b811461004b578063794f69e31461006f578063e088659e14610194578063eb68ef7a14610287575b610390610392610002565b610394600480356024810191013560006103ba604083145b8015156104bf57610002565b6103a660246004803582810192910135903560443560643560843560a43560c43560e4356040516001547f5286a75b0000000000000000000000000000000000000000000000000000000082526024820189905260448201889052606482018790526084820186905260a4820185905260c4820184905260e482018390526101006004830190815261010483018b905260009283928392600160a060020a039190911691635286a75b918f918f918f918f918f918f918f918f918f918190610124018b8b8082843782019150509a50505050505050505050506020604051808303816000876161da5a03f115610002575050604051519250505080821a60f860020a02600160f860020a03198116831415610444575b50509998505050505050505050565b6103a66024600480358281019291013590356044356064356040516002547f4e320263000000000000000000000000000000000000000000000000000000008252602482018590526044820184905267ffffffffffffffff831660648301526080600483019081526084830187905260009283928392600160a060020a039190911691634e320263918b918b918b918b918b91819060a401878780828437820191505096505050505050506020604051808303816000876161da5a03f115610002575050604051519250505080821a60f860020a02600160f860020a0319811683141561046d575b505095945050505050565b6103a66024600480358281019291013590356044356064356084356003546040517f30be923f0000000000000000000000000000000000000000000000000000000081526024810186905260448101859052600160a060020a03848116606483015267ffffffffffffffff8416608483015260a06004830190815260a4830189905260009384938493909116916330be923f918c918c918c918c918c918c91819060c40188888082843782019150509750505050505050506020604051808303816000876161da5a03f11561000257505060405151925082905060001a60f860020a029050600160f860020a031981166000141561049657600092505b50509695505050505050565b005b565b60408051918252519081900360200190f35b604080519115158252519081900360200190f35b6000546040517f3a27652300000000000000000000000000000000000000000000000000000000815260206004820190815260248201859052600160a060020a039290921691633a27652391869186918190604401848480828437820191505093505050506020604051808303816000876161da5a03f11561000257505060405151949350505050565b600160f860020a0319811660f860020a14156104635760019250610185565b6101856000610063565b600160f860020a0319811660f860020a141561048c576001925061027c565b61027c6000610063565b600160f860020a0319811660f860020a14156104b55760019250610384565b6103846000610063565b5056606060405236156101745760e060020a600035046306fdde03811461017f5780630af0b132146101dd57806318160ddd146101f55780631d48f5e9146101fe57806334298c211461028c57806340c10f191461029c57806341a42bea146102c157806347e72246146102ca57806348a0d7541461030f5780634e3cb2e91461031d5780635967caa2146103265780635ae60499146103a45780635cfc1a51146103ba5780635e2aca56146103c65780635f95f1d414610439578063631c56ef1461044a5780636def0cbe1461045557806370a08231146104bd5780637a14db16146104d5578063835278b7146104de57806386307865146105485780638da5cb5b14610566578063949d225d146105785780639f7ad1d114610583578063a06f0977146105a4578063a9059cbb146105bb578063b69ef8a8146105ea578063c8c5051514610647578063ce0a857214610667578063d0316c501461066f578063ebf0c71714610689578063f2fde38b146106ac575b6106cd6106cf610002565b6040805160088054602060026001831615610100026000190190921691909104601f81018290048202840182019094528383526106d193908301828280156108485780601f1061081d57610100808354040283529160200191610848565b61073f6004356024355b600281900a82045b92915050565b61073f60095481565b61073f6004356024355b6040805160208101825260008082528251909283918059106102275750595b90808252806020026020018201604052801561023e575b509150600090505b60208110156108505784816020811015610002571a60f860020a028282815181101561000257906020010190600160f860020a031916908160001a905350600101610246565b61073f5b6000600261095a6103be565b6106cd600435602435600054600160a060020a03908116339091161461096257610002565b61073f600d5481565b6107516004356040805160208181018352600080835283518083018552818152858252600690925292832054908390818080610a098187115b8015156111e857610002565b61073f600554600354035b90565b61073f600c5481565b6040805160206004803580820135601f81018490048402850184019095528484526106cd94919360249390929184019190819084018382808284375094965050933593505060443591505060643533600160a060020a03166000908152600a6020526040902054610a9f9067ffffffffffffffff8316901015610303565b61073f6004356024355b600281900a82026101ef565b61073f5b60035461031a565b6040805160206004803580820135601f81018490048402850184019095528484526106cd94919360249390929184019190819084018382808284375094965050933593505060443591505060643560843560a43560c43560e435600084815260106020526040812054610c849114610303565b61073f600d54600090610ea5610290565b61073f60025461031a565b6107a26040805160208181018352600082528251600480548084028301840190955284825292939092918301828280156104b157602002820191906000526020600020905b81600050548152602001906001019080831161049a575b5050505050905061031a565b61073f600435600a6020526000908152604090205481565b61073f600b5481565b6040805160206004803580820135601f81018490048402850184019095528484526106cd949193602493909291840191908190840183828082843750949650509335935050604435915050606435608435600084815260106020526040812054610ead9114610303565b6107ec6004355b60008181526006602052604081205414155b919050565b610800600054600160a060020a031681565b61073f60055461031a565b6106cd6004355b600081815260066020526040812054611075908214610303565b61073f6004356004546000906110b0908310610303565b6106cd60043560243533600160a060020a03166000908152600a60205260409020546110eb9082901015610303565b61073f600030600160a060020a03166370a08231336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f11561000257505060405151915061031a9050565b61073f600435600081815260066020526040812054611199828211610303565b61073f601d81565b61073f600435600060006111a66005600050548410610303565b61073f60006111c160006002600050545b60006000600060006111f686866103ae565b6106cd60043560005433600160a060020a039081169116146111c857610002565b005b565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156107315780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b60408051918252519081900360200190f35b60405180838152602001806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600302600f01f150905001935050505060405180910390f35b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600302600f01f1509050019250505060405180910390f35b604080519115158252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b820191906000526020600020905b81548152906001019060200180831161082b57829003601f168201915b505050505081565b5060005b602081101561089d5783816020811015610002571a60f860020a028282602001815181101561000257906020010190600160f860020a031916908160001a905350600101610854565b600160009054906101000a9004600160a060020a0316600160a060020a0316633319f70b836040518260e060020a02815260040180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f16801561092e5780820380516001836020036101000a031916815260200191505b50925050506020604051808303816000876161da5a03f115610002575050604051519695505050505050565b04905061031a565b600160a060020a0382166000908152600a602052604090205461099d90825b60008282016111eb848210801590610fb1575083821015610303565b600160a060020a0383166000908152600a60205260409020556009546109c39082610981565b600955604080518281529051600160a060020a038416917f9f494565851dbcb31fb5198ca217cda6833282fadb96ba9431bd19c82afc1dd3919081900360200190a25050565b6040516002546000198801965090805910610a215750595b908082528060200260200182016040528015610a38575b50935060009250849150600090505b600254831015610a6457610a73826001188480600101955061069a565b50929791965090945050505050565b8451600183019286918110156100025760209081029091010152610a988260016101e7565b9150610a47565b600083815260106020526040812054610ab89114610303565b610ac4610bab8361054f565b610bb1600f60009054906101000a9004600160a060020a0316600160a060020a031663e088659e868686866040518560e060020a028152600401808060200185600019168152602001846000191681526020018367ffffffffffffffff1681526020018281038252868181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015610b7f5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303816000876161da5a03f115610002575050604051519050610303565b15610303565b610bba8261058a565b60008381526010602090815260408083206001905533600160a060020a03168352600a909152902054610c039067ffffffffffffffff83165b6000600061128e83851015610303565b33600160a060020a03166000818152600a60209081526040918290209390935580518581528151908190038401812067ffffffffffffffff8616825293810193909352805191927fe98b540e92df7848084ffd671d0e51f24307beb49f2ab01e35bb695ceb8aba67929081900390910190a2600b8054600101905550505050565b600083815260106020526040812054610c9d9114610303565b600086815260106020526040812054610cb69114610303565b600085815260106020526040812054610ccf9114610303565b610cdb610bab8361054f565b610ce7610bab8261054f565b604051600f80547f794f69e3000000000000000000000000000000000000000000000000000000008352602483018a905260448301899052606483018890526084830187905260a4830186905260c4830185905260e4830184905261010060048481019182528c516101048601528c51610e0395600160a060020a03949094169463794f69e3948f948f948f948f948f948f948f948f9491938493610124019260208e810193919283928692849287926000929091601f86019190910460030201f150905090810190601f168015610dd35780820380516001836020036101000a031916815260200191505b5099505050505050505050506020604051808303816000876161da5a03f115610002575050604051519050610303565b610e0c8261058a565b610e158161058a565b600084815260106020908152604080832060019081905586845292819020929092558151848152825190819003820181208482528351918290038301822090825291810191909152815133600160a060020a0316927f0d3211cecea8fbffc05221205fa1aefe539b636c658a996a6cbc8729fe1ad001928290030190a2600d805460010190555050505050505050565b03905061031a565b610eb9610fb18461054f565b610fb6600f60009054906101000a9004600160a060020a0316600160a060020a031663eb68ef7a87878633876040518660e060020a0281526004018080602001866000191681526020018560001916815260200184600160a060020a031681526020018367ffffffffffffffff1681526020018281038252878181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f168015610f845780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303816000876161da5a03f115610002575050604051519050610303565b610303565b60008481526010602090815260408083206001905533600160a060020a03168352600a909152902054610ff39067ffffffffffffffff8316610981565b33600160a060020a03166000818152600a60209081526040918290209390935580518681528151908190038401812067ffffffffffffffff8616825293810193909352805191927f77c10afc47cf7753a7d1b501cd07d1720103713089bf4f7ba501bebda81cd4b7929081900390910190a2600c805460010190555050505050565b6005546003546110859110610303565b5060058054600101908190556000828152600660209081526040808320849055928252600790522055565b6004805483908110156100025750600052507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810154610561565b33600160a060020a03166000908152600a602052604090205461110e9082610bf3565b600160a060020a033381166000908152600a6020526040808220939093559084168152205461113d9082610981565b600160a060020a038381166000818152600a60209081526040918290209490945580518581529051919333909316927f0a85107a334eae0d22d21cdf13af0f8e8125039ec60baaa843d2c4c5b068017492918290030190a35050565b8060010191505b50919050565b505060018101600081815260076020526040902054906111a0565b905061031a565b6000805473ffffffffffffffffffffffffffffffffffffffff1916821790555b50565b8091505b5092915050565b60055411611223576004805486908110156100025760009182526020909120015493505b50505092915050565b846000141561124857600186016000818152600760205260409020549450925061121a565b6112566112668760016103ae565b915061126f61127b8760016103ae565b6001870361069a565b90506112878282610208565b6001016001870361069a565b935061121a565b5050808203806111ef56',
            gas: '54700000' // changed
        }, function (e, contract) {
            console.log(e, contract);
            if (typeof contract.address !== 'undefined') {
                console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            }
        })
    // =================================
    // END: Web3 deploy code
    // =================================
    return ztoken;
}

function _zdemo_get_ztoken(a) {
    return ztoken_abi.at(a)
}

function _zdemo_create_zprivatecontract(tracker, bid_constellation, bid_token, bid_amount, ask_constellation, ask_token, ask_amount) {
    var apk = tracker.keypair.a_pk;
    var r = zsl.getRandomness();
    var bid_address = bid_token.address;
    var ask_address = ask_token.address;

    // =================================
    // START: Web3 deploy code
    // =================================
    var zprivatecontract = zprivatecontract_abi.new(
        apk,
        r,
        bid_constellation,
        bid_address,
        bid_amount,
        ask_constellation,
        ask_address,
        ask_amount,
        {
            privateFor: [ask_constellation], // changed
            from: web3.eth.accounts[0],
            data: '0x60606040526040516112fe3803806112fe833981016040528080519060200190919080519060200190919080518201919060200180519060200190919080519060200190919080518201919060200180519060200190919080519060200190919050505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b87600b6000508190555086600e6000508190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555084600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555084600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555083600160146101000a81548167ffffffffffffffff021916908302179055508560076000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061019357805160ff19168380011785556101c4565b828001600101855582156101c4579182015b828111156101c35782518260005055916020019190600101906101a5565b5b5090506101ef91906101d1565b808211156101eb57600081815060009055506001016101d1565b5090565b505081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555080600360146101000a81548167ffffffffffffffff021916908302179055508260086000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106102b557805160ff19168380011785556102e6565b828001600101855582156102e6579182015b828111156102e55782518260005055916020019190600101906102c7565b5b50905061031191906102f3565b8082111561030d57600081815060009055506001016102f3565b5090565b50506000600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167fff2fc9682dd82e89e7e02de136eac388f69e7458384298b0936d259a829af6a485604051808267ffffffffffffffff16815260200191505060405180910390a25b5050505050505050610f638061039b6000396000f360606040523615610103576000357c010000000000000000000000000000000000000000000000000000000090048063091007a6146101055780633042b76e1461012c57806336013189146101a75780634717f698146101ce5780635dec6f70146101f55780636a1abd511461021c5780636ba5ceeb146102345780638da5cb5b146102615780639527f9be1461029a578063aec2393b146102d1578063c19d93fb146102fe578063c7a66eb314610321578063cc4f8c141461035a578063d05afbad146103d5578063dbab221b1461040e578063ef03dd1e14610426578063f2fde38b1461044d578063f496d88214610465578063fabe9f361461049e57610103565b005b61011260048050506104d7565b604051808260001916815260200191505060405180910390f35b61013960048050506104e0565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b46004805050610581565b604051808260001916815260200191505060405180910390f35b6101db600480505061058a565b604051808260001916815260200191505060405180910390f35b6102026004805050610593565b604051808260001916815260200191505060405180910390f35b610232600480803590602001909190505061059c565b005b6102416004805050610819565b604051808267ffffffffffffffff16815260200191505060405180910390f35b61026e6004805050610833565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102b96004808035906020019091908035906020019091905050610859565b60405180821515815260200191505060405180910390f35b6102de60048050506109d3565b604051808267ffffffffffffffff16815260200191505060405180910390f35b61030b60048050506109ed565b6040518082815260200191505060405180910390f35b61032e6004805050610a00565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103676004805050610a26565b60405180806020018281038252838181518152602001915080519060200190808383829060006004602084601f0104600302600f01f150905090810190601f1680156103c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e26004805050610ac7565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104246004808035906020019091905050610aed565b005b6104336004805050610d68565b604051808260001916815260200191505060405180910390f35b6104636004808035906020019091905050610d71565b005b6104726004805050610dfc565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ab6004805050610e22565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600a6000505481565b60076000508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105795780601f1061054e57610100808354040283529160200191610579565b820191906000526020600020905b81548152906001019060200180831161055c57829003601f168201915b505050505081565b600d6000505481565b60096000505481565b600b6000505481565b60006000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105fc57610002565b6106176001600060149054906101000a900460ff1614610e48565b600283600c6000505461063f600160149054906101000a900467ffffffffffffffff16610e58565b6040518084600019168152602001836000191681526020018280519060200190808383829060006004602084601f0104600302600f01f15090500193505050506020604051808303816000866161da5a03f115610002575050604051805190602001509150600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638630786583604051827c010000000000000000000000000000000000000000000000000000000002815260040180826000191681526020019150506020604051808303816000876161da5a03f1156100025750505060405180519060200150905080156107b35782600a600050819055506002600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167f6c1576fb076bed036cd08dac98156e394fab225838376081753020857084ddea60405180905060405180910390a2610813565b6004600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167f336cc5227bd5defbf32bddcc8249a2259895087ef005a131b57e9af0f94343ed60405180905060405180910390a25b5b505050565b600360149054906101000a900467ffffffffffffffff1681565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006108b5600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610e48565b6108d06000600060149054906101000a900460ff1614610e48565b82600c6000508190555081600f600050819055506002600e60005054600f60005054604051808360001916815260200182600019168152602001925050506020604051808303816000866161da5a03f11561000257505060405180519060200150600d6000508190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055506001600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167f6a2175dc1fe200a7edb14cc691d97f643198113419adb9233a1b4c5cb8aa53d360405180905060405180910390a2600190506109cd565b92915050565b600160149054906101000a900467ffffffffffffffff1681565b600060149054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60086000508054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610abf5780601f10610a9457610100808354040283529160200191610abf565b820191906000526020600020905b815481529060010190602001808311610aa257829003601f168201915b505050505081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006000610b4b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610e48565b610b666002600060149054906101000a900460ff1614610e48565b600283600b60005054610b8e600360149054906101000a900467ffffffffffffffff16610e58565b6040518084600019168152602001836000191681526020018280519060200190808383829060006004602084601f0104600302600f01f15090500193505050506020604051808303816000866161da5a03f115610002575050604051805190602001509150600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638630786583604051827c010000000000000000000000000000000000000000000000000000000002815260040180826000191681526020019150506020604051808303816000876161da5a03f115610002575050506040518051906020015090508015610d0257826009600050819055506003600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167f3e67459cc1f023920040097861ffd0b6de230e415fe2415e7dafb515a3005ae960405180905060405180910390a2610d62565b6005600060146101000a81548160ff021916908302179055503373ffffffffffffffffffffffffffffffffffffffff167fc00fac96dee2f35b8fec0d57bf0887d7a2c82034746a0b3328994d2e9bac97c760405180905060405180910390a25b5b505050565b600c6000505481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dcd57610002565b80600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055505b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b801515610e5457610002565b5b50565b60206040519081016040528060008152602001506000602060405190810160405280600081526020015060008478010000000000000000000000000000000000000000000000000292506008604051805910610eb15750595b908082528060200260200182016040528015610ec8575b509150600090505b6008811015610f535782816007036008811015610002571a7f01000000000000000000000000000000000000000000000000000000000000000282828151811015610002579060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b8080600101915050610ed0565b819350610f5b565b50505091905056',
            gas: '54700000' // changed
        }, function (e, contract) {
            console.log(e, contract);
            if (typeof contract.address !== 'undefined') {
                console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
            }
        })
    // =================================
    // END: Web3 deploy code
    // =================================

    return zprivatecontract;
}


function _zdemo_get_zprivatecontract(a) {
    return zprivatecontract_abi.at(a);
}

function _zdemo_accept_bid(tracker, zprivatecontract) {
    var counterparty = zprivatecontract.bidderConstellationAddress();
    zprivatecontract.acceptBid(tracker.keypair.a_pk, zsl.getRandomness(), { from: eth.accounts[0], gas: 54700000, privateFor: [counterparty] });
}

function _zdemo_add_payment_received_by_asker(tracker, zprivatecontract) {
    var rho = zprivatecontract.paymentReceivedByAsker();
    var pk = tracker.keypair.a_pk;
    var value = parseInt(zprivatecontract.bidAmount());
    var cm = zsl.getCommitment(rho, pk, value);
    var note = {};
    note.rho = rho;
    note.value = value;
    note.ztoken = zprivatecontract.bidTokenAddress();
    note.uuid = web3.toHex(web3.sha3(cm, { encoding: 'hex' }));
    tracker.notes[note.uuid] = note;
    return note;
}

function _zdemo_add_payment_received_by_bidder(tracker, zprivatecontract) {
    var rho = zprivatecontract.paymentReceivedByBidder();
    var pk = tracker.keypair.a_pk;
    var value = parseInt(zprivatecontract.askAmount());
    var cm = zsl.getCommitment(rho, pk, value);
    var note = {};
    note.rho = rho;
    note.value = value;
    note.ztoken = zprivatecontract.askTokenAddress();
    note.uuid = web3.toHex(web3.sha3(cm, { encoding: 'hex' }));
    tracker.notes[note.uuid] = note;
    return note;
}

// Send a single note as shielded transfer, with change going back to the sender.
function _zdemo_submit_funds_to_contract(tracker, ztoken, zprivatecontract, noteId, amount, recipient_apk, recipient) {

    var empty_uncles = ["0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100", "0x8000000000000000000000000000000000000000000000000000000000000100"];
    var note = tracker.notes[noteId];

    if (note.value < amount) {
        console.log("Cannot transfer " + amount + " as note value of " + note.value + " is too small.");
        return;
    }

    var change = note.value - amount;
    var cm = zsl.getCommitment(note.rho, tracker.keypair.a_pk, note.value);
    var witnesses = ztoken.getWitness(cm);
    var treeIndex = parseInt(witnesses[0]);
    var authPath = witnesses[1];
    var tmpKeypair = zsl.getNewAddress();
    var out_rho_1 = zsl.getRandomness();
    var out_rho_2 = zsl.getRandomness();

    console.log("***************************************************************");
    console.log("[*] Generating proof for shielded transfer");
    var start = new Date();
    var result = zsl.createShieldedTransfer(
        note.rho, tracker.keypair.a_sk, note.value, treeIndex, authPath,
        zsl.getRandomness(), tmpKeypair.a_sk, 0, 0, empty_uncles,
        out_rho_1, recipient_apk, amount,
        out_rho_2, tracker.keypair.a_pk, change);
    var elapsed = new Date() - start;
    console.log("[*] Generated in " + elapsed / 1000 + " secs");

    var n1 = {};
    n1.value = amount;
    n1.rho = out_rho_1;
    n1.uuid = web3.toHex(web3.sha3(result.out_cm_1, { encoding: 'hex' }));
    n1.ztoken = ztoken.address;
    console.log("[*] Recipient receives note of " + amount + " " + ztoken.name())

    var n2 = {};
    n2.value = change;
    n2.rho = out_rho_2;
    n2.uuid = web3.toHex(web3.sha3(result.out_cm_2, { encoding: 'hex' }));
    n2.ztoken = ztoken.address;
    console.log("[*] Sender receives change of " + change + " " + ztoken.name())

    var events = ztoken.allEvents();
    events.watch(function (error, event) {
        if (error) {
            console.log("Error: " + error);
        } else {
            var s = JSON.stringify(event.args);
            console.log(event.event + " : " + s);
            if (event.event == 'LogShieldedTransfer' && event.args['uuid_1'] == n1.uuid && event.args['uuid_2'] == n2.uuid) {
                console.log("[*] Shielded transfer added to z-contract.");
                events.stopWatching();

                // This note belongs to the recipient. In this POC, it will be another node, so we don't track it here.
                // tracker.notes[n1.uuid] = n1;

                // This note is the change note which should be tracked.
                tracker.notes[n2.uuid] = n2;

                // Input note is spent.
                tracker.spent[noteId] = note;
                delete (tracker.notes[noteId]);

                // Notify private contract about payment
                if (recipient == zprivatecontract.askerConstellationAddress()) {
                    console.log("[*] Submitting payment details to private contract");
                    zprivatecontract.submitPaymentDetails(
                        n1.rho,
                        { from: eth.accounts[0], gas: 54700000, privateFor: [recipient] });
                } else {
                    console.log("[*] Submitting settlement details to private contract");
                    zprivatecontract.submitSettlementDetails(
                        n1.rho,
                        { from: eth.accounts[0], gas: 54700000, privateFor: [recipient] });
                }
                console.log("***************************************************************");
            }
        }
    });

    console.log("[*] Submit shielded transfer to z-contract...");
    var anchor = ztoken.root();
    ztoken.shieldedTransfer(
        result.proof, anchor,
        result.in_spend_nf_1, result.in_spend_nf_2,
        result.out_send_nf_1, result.out_send_nf_2,
        result.out_cm_1, result.out_cm_2,
        { from: eth.accounts[0], gas: 5470000 });
    return "Waiting for log event...";
}


function _zdemo_submit_payment(tracker, ztoken, zprivatecontract, noteId) {
    return _zdemo_submit_funds_to_contract(tracker, ztoken, zprivatecontract, noteId,
        parseInt(zprivatecontract.bidAmount()),
        zprivatecontract.askerApk(),
        zprivatecontract.askerConstellationAddress());
}


function _zdemo_submit_settlement(tracker, ztoken, zprivatecontract, noteId) {
    return _zdemo_submit_funds_to_contract(tracker, ztoken, zprivatecontract, noteId,
        parseInt(zprivatecontract.askAmount()),
        zprivatecontract.bidderApk(),
        zprivatecontract.bidderConstellationAddress());
}


function _zdemo_watch_events(zprivatecontract) {
    var events = zprivatecontract.allEvents();
    events.watch(function (error, event) {
        if (error) {
            console.log("Error: " + error);
        } else {
            var s = JSON.stringify(event.args)
            console.log(event.event + " : " + s);
            // take action
            if (event.event == 'LogDoneEvent') {
                console.log("***************************************************************");
                console.log("* TRADE AGREED");
                if (zprivatecontract.bidder() == web3.eth.accounts[0]) {
                    var tmp = _zdemo_get_ztoken(zprivatecontract.bidTokenAddress())
                    console.log
                    console.log("* Please send payment of " + zprivatecontract.bidAmount() + " " + tmp.name() + " to private contract.");
                    console.log("* Counterparty's constellation address: " + zprivatecontract.askerConstellationAddress());
                    console.log("***************************************************************");
                } else {
                    console.log("* Waiting for payment from counterparty.");
                    console.log("***************************************************************");
                }
            }
            else if (event.event == 'LogPaymentEvent') {
                console.log("***************************************************************");
                console.log("* PAYMENT RECEIVED");
                if (zprivatecontract.asker() == web3.eth.accounts[0]) {
                    var tmp = _zdemo_get_ztoken(zprivatecontract.askTokenAddress())
                    console.log("* Please send settlement of " + zprivatecontract.askAmount() + " " + tmp.name() + " to private contract.");
                    console.log("* Counterparty's constellation address: " + zprivatecontract.bidderConstellationAddress());
                    console.log("***************************************************************");
                } else {
                    console.log("* Waiting for settlement from counterparty.");
                    console.log("***************************************************************");
                }
            } else if (event.event == 'LogSettlementEvent') {
                console.log("***************************************************************");
                console.log("* TRADE FINISHED");
                var note;
                if (zprivatecontract.asker() == web3.eth.accounts[0]) {
                    note = _zdemo_add_payment_received_by_asker(tracker, zprivatecontract);
                    // for (var key in note){
                    //     console.log( "* " + key + ": " + note[key] );
                    // }
                    //console.log(JSON.stringify(note, null, 4))
                } else {
                    var note = _zdemo_add_payment_received_by_bidder(tracker, zprivatecontract);
                }
                console.log("* Tracker received shielded note with uuid: " + note.uuid)
                console.log("***************************************************************");
            }
        }
    });
    return events;
}


// Namespace for zdemo, using module pattern.

var zdemo = (function() {
    return {
        create_ztoken: function(tokenName, initialSupply) {
            return _zdemo_create_ztoken(tokenName, initialSupply);
        },
        get_ztoken: function(a) {
            return _zdemo_get_ztoken(a);
        },
        create_zprivatecontract: function(tracker, bid_constellation, bid_token, bid_amount, ask_constellation, ask_token, ask_amount) {
            return _zdemo_create_zprivatecontract(tracker, bid_constellation, bid_token, bid_amount, ask_constellation, ask_token, ask_amount);
        },
        get_zprivatecontract: function(a) {
            return _zdemo_get_zprivatecontract(a);
        },
        accept_bid: function(tracker, zprivatecontract) {
            return _zdemo_accept_bid(tracker, zprivatecontract);
        },
        submit_payment: function(tracker, ztoken, zprivatecontract, noteId) {
            return _zdemo_submit_payment(tracker, ztoken, zprivatecontract, noteId);
        },
        submit_settlement: function(tracker, ztoken, zprivatecontract, noteId) {
            return _zdemo_submit_settlement(tracker, ztoken, zprivatecontract, noteId);
        },
        watch_events: function(zprivatecontract) {
            return _zdemo_watch_events(zprivatecontract);
        }
    };
})();


// Note tracker

function ztracker() {
    this.keypair = zsl.getNewAddress();
    this.notes = {};
    this.spent = {};
}

ztracker.prototype.shield = function (ztoken, value) {
    var rho = zsl.getRandomness();
    var pk = this.keypair.a_pk;
    console.log("***************************************************************");
    console.log("[*] Generating proof for shielding");
    var start = new Date();
    var result = zsl.createShielding(rho, pk, value);
    var elapsed = new Date() - start;
    console.log("[*] Generated in " + elapsed / 1000 + " secs");

    var uuid = web3.toHex(web3.sha3(result.cm, { encoding: 'hex' }));

    var that = this;
    var events = ztoken.allEvents();
    events.watch(function (error, event) {
        if (error) {
            console.log("Error: " + error);
        } else {
            var s = JSON.stringify(event.args);
            console.log(event.event + " : " + s);
            if (event.event == 'LogShielding' && event.args['uuid'] == uuid) {
                console.log("[*] Shielding added to z-contract.");
                console.log("***************************************************************");
                events.stopWatching();
                var note = {};
                note.rho = rho;
                note.value = value;
                note.uuid = uuid;
                note.ztoken = ztoken.address;
                that.notes[uuid] = note;
            }
        }
    });

    ztoken.shield(result.proof, result.send_nf, result.cm, value, { from: eth.accounts[0], gas: 5470000 });
    return "Waiting for log event...";
}


ztracker.prototype.unshield = function (uuid) {
    var note = this.notes[uuid];

    var a = note.ztoken;
    var ztoken = ztoken_abi.at(a);

    var cm = zsl.getCommitment(note.rho, this.keypair.a_pk, note.value);
    var witnesses = ztoken.getWitness(cm)
    var treeIndex = parseInt(witnesses[0])
    var authPath = witnesses[1]

    console.log("***************************************************************");
    console.log("[*] Generating proof for unshielding");
    var start = new Date();
    var result = zsl.createUnshielding(note.rho, this.keypair.a_sk, eth.accounts[0], note.value, treeIndex, authPath)
    var elapsed = new Date() - start;
    console.log("[*] Generated in " + elapsed / 1000 + " secs");

    var that = this;

    var events = ztoken.allEvents();
    events.watch(function (error, event) {
        if (error) {
            console.log("Error: " + error);
        } else {
            var s = JSON.stringify(event.args);
            console.log(event.event + " : " + s);
            if (event.event == 'LogUnshielding' && event.args['uuid'] == uuid) {
                console.log("[*] Unshielding added to z-contract.");
                console.log("***************************************************************");
                events.stopWatching();
                that.spent[uuid] = note;
                delete (that.notes[uuid]);
            }
        }
    });

    var rt = ztoken.root();
    ztoken.unshield(result.proof, result.spend_nf, cm, rt, note.value, { from: eth.accounts[0], gas: 54700000 })
    return "Waiting for log event...";
}


ztracker.prototype.list = function (ztoken, amount) {
    var result = [];
    var name = ztoken.name();
    var addr = ztoken.address;
    if (amount == undefined) {
        amount = 0;
    }
    for (var uuid in this.notes) {
        var note = this.notes[uuid];
        if (addr == note.ztoken && (note.value >= amount)) {
            result.push(note);
        }
    }

    console.log("***************************************************************");
    console.log("Found " + result.length + " " + name + " notes >= " + amount)
    console.log(JSON.stringify(result, null, 4))
    console.log("***************************************************************");
}


ztracker.prototype.balance = function (ztoken) {
    var result = 0;
    var name = ztoken.name();
    var addr = ztoken.address;
    for (var uuid in this.notes) {
        var note = this.notes[uuid];
        if (addr == note.ztoken) {
            result += note.value;
        }
    }
    console.log("***************************************************************");
    console.log("Shielded balance of " + name + " = " + result);
    console.log("***************************************************************");
}

// Basic persistence of tracker for demo purposes.
ztracker.prototype.load = function (filename) {
    var x = JSON.parse(zsl.loadTracker(filename));
    this.keypair = x.keypair;
    this.notes = x.notes;
    this.spent = x.spent;
    return true;
}

// TODO: Post-demo, filename should be sanitized.
ztracker.prototype.save = function (filename) {
    return zsl.saveTracker(filename, JSON.stringify(this))
}
